"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[788],{5017:t=>{t.exports=JSON.parse('{"blogPosts":[{"id":"openai-chatgpt-http-basic","metadata":{"permalink":"/it/blog/openai-chatgpt-http-basic","editUrl":"https://github.com/paion-data/Fiore/tree/master/docs/blog/2025-03-06-chatgpt-api-with-java.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2025-03-06-chatgpt-api-with-java.md","title":"Come utilizzare l\'API ChatGPT con Java","description":"Immagina di sfruttare la potenza delle risposte umane di ChatGPT direttamente dal nostro servizio web! Sarebbe come","date":"2025-03-06T00:00:00.000Z","formattedDate":"6 marzo 2025","tags":[{"label":"Java","permalink":"/it/blog/tags/java"},{"label":"OpenAI","permalink":"/it/blog/tags/open-ai"},{"label":"ChatGPT","permalink":"/it/blog/tags/chat-gpt"}],"readingTime":0.7,"hasTruncateMarker":true,"authors":[{"name":"Jiaqi Liu","title":"Manutentore di Fiore","url":"https://github.com/QubitPi","imageURL":"https://avatars.githubusercontent.com/u/16126939?v=4","key":"jiaqi"}],"frontMatter":{"slug":"openai-chatgpt-http-basic","title":"Come utilizzare l\'API ChatGPT con Java","authors":"jiaqi","tags":["Java","OpenAI","ChatGPT"]},"unlisted":false},"content":"Immagina di sfruttare la potenza delle risposte umane di ChatGPT direttamente dal nostro servizio web! Sarebbe come\\naggiungere un compressore al nostro motore gi\xe0 potente.\\n\\n\x3c!--truncate--\x3e\\n\\nQuesto frammento di codice mostra l\'esempio \\"hello-world\\" di come eseguire il proxy della chat sui modelli OpenAI\\nChatGPT in un servizio web basato su Jersey:\\n\\n```java\\nimport com.fasterxml.jackson.databind.ObjectMapper;\\n\\nimport jakarta.validation.constraints.NotNull;\\nimport jakarta.ws.rs.Consumes;\\nimport jakarta.ws.rs.POST;\\nimport jakarta.ws.rs.Path;\\nimport jakarta.ws.rs.Produces;\\nimport jakarta.ws.rs.core.MediaType;\\nimport jakarta.ws.rs.core.Response;\\n\\nimport java.io.IOException;\\nimport java.net.URI;\\nimport java.net.http.HttpClient;\\nimport java.net.http.HttpRequest;\\nimport java.net.http.HttpResponse;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.Objects;\\n\\n@POST\\n@Path(\\"/chat\\")\\n@Consumes(MediaType.APPLICATION_JSON)\\n@Produces(MediaType.APPLICATION_JSON)\\npublic Response chat(@NotNull final String chatMessage) throws IOException, InterruptedException {\\n    return Response\\n            .status(Response.Status.CREATED)\\n            .entity(\\n                    HttpClient.newHttpClient().send(\\n                            HttpRequest.newBuilder()\\n                                    .uri(URI.create(\\"https://api.openai.com/v1/chat/completions\\"))\\n                                    .POST(\\n                                            HttpRequest.BodyPublishers.ofString(\\n                                                    new ObjectMapper().writeValueAsString(\\n                                                            Map.ofEntries(\\n                                                                    Map.entry(\\"model\\", \\"gpt-3.5-turbo\\"),\\n                                                                    Map.entry(\\"messages\\",\\n                                                                            List.of(Map.ofEntries(\\n                                                                                    Map.entry(\\"role\\", \\"user\\"),\\n                                                                                    Map.entry(\\"content\\", chatMessage)\\n                                                                            ))\\n                                                                    )\\n                                                            )\\n                                                    )\\n                                            )\\n                                    )\\n                                    .setHeader(\\"Authorization\\", \\"Bearer <MY OPEN AI API KEY>\\")\\n                                    .setHeader(\\"Content-type\\", \\"application/json\\")\\n                                    .build(),\\n                            HttpResponse.BodyHandlers.ofString()\\n                    ).body()\\n            )\\n            .build();\\n}\\n```"}]}')}}]);